{"version":3,"sources":["components/menu.js","components/nutrition.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","root","flexGrow","palette","primary","green","typography","useNextVariants","styles","grow","width","menuButton","marginLeft","marginRight","Menu","react_default","a","createElement","id","AppBar_default","position","color","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","Component","colors","Paper","padding","marginTop","marginBottom","footer","bottom","textField","margin","button","height","cont","Nutrition","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","calories","proteins","fats","carbohydrates","dataToDisplay","dataToSave","name","value","handleClick","bind","assertThisInitialized","handleChange","setState","newCalories","newProteins","newFats","newCarbo","console","log","updatedData","showData","event","newName","target","newValue","defineProperty","Grid_default","container","justify","item","xs","Paper_default","style","md","ResponsiveContainer","BarChart","data","XAxis","dataKey","stroke","YAxis","domain","Bar","fill","barSize","background","map","entry","index","Cell","key","concat","TextField_default","type","label","onChange","Button_default","onClick","BottomNavigation_default","BottomNavigationAction_default","icon","Restore_default","AddBox_default","App","className","menu","nutrition","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.690748f7.chunk.js","sourcesContent":["import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport green from '@material-ui/core/colors/green';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst theme = createMuiTheme({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    palette: {\r\n        primary: green\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n});\r\nconst styles = {\r\n    grow: {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"Navigation\" styles={styles.root}>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <AppBar position=\"static\" color=\"primary\">\r\n                        <Toolbar>\r\n                            <IconButton color=\"inherit\" aria-label=\"Menu\" styles={styles.menuButton}>\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" color=\"inherit\">\r\n                                Hello\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </MuiThemeProvider>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Menu;","import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport { BarChart, Bar, XAxis, YAxis, ResponsiveContainer, Cell } from 'recharts';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: green\r\n    }\r\n});\r\n\r\n\r\nconst colors = [\"#e53935\", \"#fb8c00\", \"#ffeb3b\", \"#2196f3\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\r\n\r\nconst styles = {\r\n    Paper: {\r\n        padding: \"20px\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"10px\"\r\n    },\r\n    footer: {\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        width: \"100%\"\r\n    },\r\n    textField: {\r\n        width: \"40%\",\r\n        margin: \"5%\",\r\n\r\n    },\r\n    button: {\r\n        width: \"50%\",\r\n        height: \"10vh\"\r\n    },\r\n    cont: {\r\n        marginTop: 50\r\n    }\r\n\r\n}\r\n\r\nclass Nutrition extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            calories: 0,\r\n            proteins: 0,\r\n            fats: 0,\r\n            carbohydrates: 0,\r\n            dataToDisplay: [],\r\n            dataToSave: [\r\n                {name: 'Calories', value: 0},\r\n                {name: 'Protein', value: 0},\r\n                {name: 'Fats', value: 0},\r\n                {name: 'Carbohydrates', value: 0}\r\n            ]\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            dataToDisplay: [\r\n                {name: 'Calories', value: 0},\r\n                {name: 'Protein', value: 0},\r\n                {name: 'Fats', value:0},\r\n                {name: 'Carbohydrates', value: 0}\r\n            ]\r\n        })\r\n    }\r\n    handleClick(){\r\n        let newCalories = this.state.dataToSave[0].value + (this.state.calories * 1);\r\n        let newProteins = this.state.dataToSave[1].value + (this.state.proteins * 1);\r\n        let newFats = this.state.dataToSave[2].value + (this.state.fats * 1);\r\n        let newCarbo = this.state.dataToSave[3].value + (this.state.carbohydrates * 1);\r\n        console.log(newCalories);\r\n        console.log(newProteins);\r\n        console.log(newFats);\r\n        console.log(newCarbo);\r\n        let updatedData = this.state.dataToSave;\r\n        updatedData[0].value = newCalories;\r\n        updatedData[1].value = newProteins;\r\n        updatedData[2].value = newFats;\r\n        updatedData[3].value = newCarbo;\r\n        this.setState({\r\n            dataToSave: updatedData\r\n        })\r\n        let showData = this.state.dataToDisplay;\r\n        if(updatedData[0].value < 3000){\r\n            showData[0].value = (updatedData[0].value / 30);\r\n        }else{\r\n            showData[0].value = 100;\r\n        }\r\n        if(updatedData[1].value < 165){\r\n            showData[1].value = (updatedData[1].value / 1.65);\r\n        }else{\r\n            showData[1].value = 100;\r\n        }\r\n        if(updatedData[2].value < 60){\r\n            showData[2].value = (updatedData[2].value / 0.6);\r\n        }else{\r\n            showData[2].value = 100;\r\n        }\r\n        if(updatedData[3].value < 250){\r\n            showData[3].value = (updatedData[3].value / 2.5);\r\n        }else{\r\n            showData[3].value = 100;\r\n        }\r\n    }\r\n    handleChange(event){\r\n        let newName = event.target.name;\r\n        let newValue = event.target.value;\r\n        this.setState({\r\n            [newName]: newValue\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <section id=\"Nutrition\" >\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={10}>\r\n                            <Paper style={styles.Paper}>\r\n                                <Grid container>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <div style={{ height: 500 +'px'}}>\r\n                                            <ResponsiveContainer  width=\"100%\" height=\"100%\">\r\n                                                <BarChart data={this.state.dataToDisplay}>\r\n                                                    <XAxis dataKey=\"name\" stroke=\"green\" />\r\n                                                    <YAxis domain={[0, 100]} stroke=\"green\"/>\r\n                                                    <Bar dataKey=\"value\" fill=\"#8884d8\" barSize={25}\r\n                                                         background={{ fill: '#eee' }}>\r\n                                                        {\r\n                                                            this.state.dataToDisplay.map((entry, index) => (\r\n                                                                <Cell key={`cell-${index}`} fill={colors[index % 20]}/>\r\n                                                            ))\r\n                                                        }\r\n                                                    </Bar>\r\n                                                </BarChart>\r\n                                            </ResponsiveContainer>\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <TextField\r\n                                            id=\"calories\"\r\n                                            name=\"calories\"\r\n                                            type=\"number\"\r\n                                            label=\"Calories\"\r\n                                            style={styles.textField}\r\n                                            margin=\"dense\"\r\n                                            variant=\"outlined\"\r\n                                            onChange={this.handleChange}\r\n                                        >\r\n                                        </TextField>\r\n                                        <TextField\r\n                                            id=\"proteins\"\r\n                                            name=\"proteins\"\r\n                                            type=\"number\"\r\n                                            label=\"Proteins\"\r\n                                            style={styles.textField}\r\n                                            margin=\"dense\"\r\n                                            variant=\"outlined\"\r\n                                            onChange={this.handleChange}></TextField>\r\n                                        <TextField\r\n                                            id=\"fats\"\r\n                                            name=\"fats\"\r\n                                            type=\"number\"\r\n                                            label=\"Fats\"\r\n                                            style={styles.textField}\r\n                                            margin=\"dense\"\r\n                                            variant=\"outlined\"\r\n                                            onChange={this.handleChange}></TextField>\r\n                                        <TextField\r\n                                            id=\"carbohydrates\"\r\n                                            name=\"carbohydrates\"\r\n                                            type=\"number\"\r\n                                            label=\"Carbohydrates\"\r\n                                            style={styles.textField}\r\n                                            margin=\"dense\"\r\n                                            variant=\"outlined\"\r\n                                            onChange={this.handleChange}></TextField>\r\n                                        <Grid container justify=\"center\" style={styles.cont}>\r\n                                            <Button variant=\"contained\" style={styles.button} color=\"primary\" onClick={this.handleClick}>\r\n                                                Add values!\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Paper style={styles.footer}>\r\n                        <BottomNavigation>\r\n                            <BottomNavigationAction label=\"Recent\" icon={<RestoreIcon />} />\r\n                            <BottomNavigationAction label=\"Favorites\" icon={<AddBox />} />\r\n                        </BottomNavigation>\r\n                    </Paper>\r\n                </MuiThemeProvider>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Nutrition;","import React, { Component } from 'react';\nimport './App.css';\nimport Menu from \"./components/menu\";\nimport Nutrition from \"./components/nutrition\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Menu></Menu>\n        <Nutrition></Nutrition>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}